/* automatically generated by rust-bindgen 0.65.1 */

pub type wchar_t = ::std::os::raw::c_int;
pub type Py_ssize_t = isize;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PyStatus {
    pub _type: PyStatus__bindgen_ty_1,
    pub func: *const ::std::os::raw::c_char,
    pub err_msg: *const ::std::os::raw::c_char,
    pub exitcode: ::std::os::raw::c_int,
}
pub const PyStatus__PyStatus_TYPE_OK: PyStatus__bindgen_ty_1 = 0;
pub const PyStatus__PyStatus_TYPE_ERROR: PyStatus__bindgen_ty_1 = 1;
pub const PyStatus__PyStatus_TYPE_EXIT: PyStatus__bindgen_ty_1 = 2;
pub type PyStatus__bindgen_ty_1 = ::std::os::raw::c_uint;
#[test]
fn bindgen_test_layout_PyStatus() {
    const UNINIT: ::std::mem::MaybeUninit<PyStatus> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<PyStatus>(),
        32usize,
        concat!("Size of: ", stringify!(PyStatus))
    );
    assert_eq!(
        ::std::mem::align_of::<PyStatus>(),
        8usize,
        concat!("Alignment of ", stringify!(PyStatus))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr)._type) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(PyStatus),
            "::",
            stringify!(_type)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).func) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(PyStatus),
            "::",
            stringify!(func)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).err_msg) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(PyStatus),
            "::",
            stringify!(err_msg)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).exitcode) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(PyStatus),
            "::",
            stringify!(exitcode)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PyWideStringList {
    pub length: Py_ssize_t,
    pub items: *mut *mut wchar_t,
}
#[test]
fn bindgen_test_layout_PyWideStringList() {
    const UNINIT: ::std::mem::MaybeUninit<PyWideStringList> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<PyWideStringList>(),
        16usize,
        concat!("Size of: ", stringify!(PyWideStringList))
    );
    assert_eq!(
        ::std::mem::align_of::<PyWideStringList>(),
        8usize,
        concat!("Alignment of ", stringify!(PyWideStringList))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).length) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(PyWideStringList),
            "::",
            stringify!(length)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).items) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(PyWideStringList),
            "::",
            stringify!(items)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PyPreConfig {
    pub _config_init: ::std::os::raw::c_int,
    pub parse_argv: ::std::os::raw::c_int,
    pub isolated: ::std::os::raw::c_int,
    pub use_environment: ::std::os::raw::c_int,
    pub configure_locale: ::std::os::raw::c_int,
    pub coerce_c_locale: ::std::os::raw::c_int,
    pub coerce_c_locale_warn: ::std::os::raw::c_int,
    pub utf8_mode: ::std::os::raw::c_int,
    pub dev_mode: ::std::os::raw::c_int,
    pub allocator: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_PyPreConfig() {
    const UNINIT: ::std::mem::MaybeUninit<PyPreConfig> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<PyPreConfig>(),
        40usize,
        concat!("Size of: ", stringify!(PyPreConfig))
    );
    assert_eq!(
        ::std::mem::align_of::<PyPreConfig>(),
        4usize,
        concat!("Alignment of ", stringify!(PyPreConfig))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr)._config_init) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(PyPreConfig),
            "::",
            stringify!(_config_init)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).parse_argv) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(PyPreConfig),
            "::",
            stringify!(parse_argv)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).isolated) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(PyPreConfig),
            "::",
            stringify!(isolated)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).use_environment) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(PyPreConfig),
            "::",
            stringify!(use_environment)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).configure_locale) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(PyPreConfig),
            "::",
            stringify!(configure_locale)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).coerce_c_locale) as usize - ptr as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(PyPreConfig),
            "::",
            stringify!(coerce_c_locale)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).coerce_c_locale_warn) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(PyPreConfig),
            "::",
            stringify!(coerce_c_locale_warn)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).utf8_mode) as usize - ptr as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(PyPreConfig),
            "::",
            stringify!(utf8_mode)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).dev_mode) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(PyPreConfig),
            "::",
            stringify!(dev_mode)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).allocator) as usize - ptr as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(PyPreConfig),
            "::",
            stringify!(allocator)
        )
    );
}
extern "C" {
    pub fn PyPreConfig_InitIsolatedConfig(config: *mut PyPreConfig);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PyConfig {
    pub _config_init: ::std::os::raw::c_int,
    pub isolated: ::std::os::raw::c_int,
    pub use_environment: ::std::os::raw::c_int,
    pub dev_mode: ::std::os::raw::c_int,
    pub install_signal_handlers: ::std::os::raw::c_int,
    pub use_hash_seed: ::std::os::raw::c_int,
    pub hash_seed: ::std::os::raw::c_ulong,
    pub faulthandler: ::std::os::raw::c_int,
    pub tracemalloc: ::std::os::raw::c_int,
    pub import_time: ::std::os::raw::c_int,
    pub code_debug_ranges: ::std::os::raw::c_int,
    pub show_ref_count: ::std::os::raw::c_int,
    pub dump_refs: ::std::os::raw::c_int,
    pub dump_refs_file: *mut wchar_t,
    pub malloc_stats: ::std::os::raw::c_int,
    pub filesystem_encoding: *mut wchar_t,
    pub filesystem_errors: *mut wchar_t,
    pub pycache_prefix: *mut wchar_t,
    pub parse_argv: ::std::os::raw::c_int,
    pub orig_argv: PyWideStringList,
    pub argv: PyWideStringList,
    pub xoptions: PyWideStringList,
    pub warnoptions: PyWideStringList,
    pub site_import: ::std::os::raw::c_int,
    pub bytes_warning: ::std::os::raw::c_int,
    pub warn_default_encoding: ::std::os::raw::c_int,
    pub inspect: ::std::os::raw::c_int,
    pub interactive: ::std::os::raw::c_int,
    pub optimization_level: ::std::os::raw::c_int,
    pub parser_debug: ::std::os::raw::c_int,
    pub write_bytecode: ::std::os::raw::c_int,
    pub verbose: ::std::os::raw::c_int,
    pub quiet: ::std::os::raw::c_int,
    pub user_site_directory: ::std::os::raw::c_int,
    pub configure_c_stdio: ::std::os::raw::c_int,
    pub buffered_stdio: ::std::os::raw::c_int,
    pub stdio_encoding: *mut wchar_t,
    pub stdio_errors: *mut wchar_t,
    pub check_hash_pycs_mode: *mut wchar_t,
    pub use_frozen_modules: ::std::os::raw::c_int,
    pub safe_path: ::std::os::raw::c_int,
    pub pathconfig_warnings: ::std::os::raw::c_int,
    pub program_name: *mut wchar_t,
    pub pythonpath_env: *mut wchar_t,
    pub home: *mut wchar_t,
    pub platlibdir: *mut wchar_t,
    pub module_search_paths_set: ::std::os::raw::c_int,
    pub module_search_paths: PyWideStringList,
    pub stdlib_dir: *mut wchar_t,
    pub executable: *mut wchar_t,
    pub base_executable: *mut wchar_t,
    pub prefix: *mut wchar_t,
    pub base_prefix: *mut wchar_t,
    pub exec_prefix: *mut wchar_t,
    pub base_exec_prefix: *mut wchar_t,
    pub skip_source_first_line: ::std::os::raw::c_int,
    pub run_command: *mut wchar_t,
    pub run_module: *mut wchar_t,
    pub run_filename: *mut wchar_t,
    pub _install_importlib: ::std::os::raw::c_int,
    pub _init_main: ::std::os::raw::c_int,
    pub _isolated_interpreter: ::std::os::raw::c_int,
    pub _is_python_build: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_PyConfig() {
    const UNINIT: ::std::mem::MaybeUninit<PyConfig> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<PyConfig>(),
        424usize,
        concat!("Size of: ", stringify!(PyConfig))
    );
    assert_eq!(
        ::std::mem::align_of::<PyConfig>(),
        8usize,
        concat!("Alignment of ", stringify!(PyConfig))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr)._config_init) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(_config_init)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).isolated) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(isolated)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).use_environment) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(use_environment)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).dev_mode) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(dev_mode)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).install_signal_handlers) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(install_signal_handlers)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).use_hash_seed) as usize - ptr as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(use_hash_seed)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).hash_seed) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(hash_seed)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).faulthandler) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(faulthandler)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).tracemalloc) as usize - ptr as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(tracemalloc)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).import_time) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(import_time)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).code_debug_ranges) as usize - ptr as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(code_debug_ranges)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).show_ref_count) as usize - ptr as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(show_ref_count)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).dump_refs) as usize - ptr as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(dump_refs)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).dump_refs_file) as usize - ptr as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(dump_refs_file)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).malloc_stats) as usize - ptr as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(malloc_stats)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).filesystem_encoding) as usize - ptr as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(filesystem_encoding)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).filesystem_errors) as usize - ptr as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(filesystem_errors)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pycache_prefix) as usize - ptr as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(pycache_prefix)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).parse_argv) as usize - ptr as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(parse_argv)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).orig_argv) as usize - ptr as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(orig_argv)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).argv) as usize - ptr as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(argv)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).xoptions) as usize - ptr as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(xoptions)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).warnoptions) as usize - ptr as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(warnoptions)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).site_import) as usize - ptr as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(site_import)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).bytes_warning) as usize - ptr as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(bytes_warning)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).warn_default_encoding) as usize - ptr as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(warn_default_encoding)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).inspect) as usize - ptr as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(inspect)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).interactive) as usize - ptr as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(interactive)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).optimization_level) as usize - ptr as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(optimization_level)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).parser_debug) as usize - ptr as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(parser_debug)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).write_bytecode) as usize - ptr as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(write_bytecode)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).verbose) as usize - ptr as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(verbose)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).quiet) as usize - ptr as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(quiet)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).user_site_directory) as usize - ptr as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(user_site_directory)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).configure_c_stdio) as usize - ptr as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(configure_c_stdio)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).buffered_stdio) as usize - ptr as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(buffered_stdio)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).stdio_encoding) as usize - ptr as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(stdio_encoding)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).stdio_errors) as usize - ptr as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(stdio_errors)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).check_hash_pycs_mode) as usize - ptr as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(check_hash_pycs_mode)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).use_frozen_modules) as usize - ptr as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(use_frozen_modules)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).safe_path) as usize - ptr as usize },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(safe_path)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pathconfig_warnings) as usize - ptr as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(pathconfig_warnings)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).program_name) as usize - ptr as usize },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(program_name)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pythonpath_env) as usize - ptr as usize },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(pythonpath_env)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).home) as usize - ptr as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(home)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).platlibdir) as usize - ptr as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(platlibdir)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).module_search_paths_set) as usize - ptr as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(module_search_paths_set)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).module_search_paths) as usize - ptr as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(module_search_paths)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).stdlib_dir) as usize - ptr as usize },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(stdlib_dir)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).executable) as usize - ptr as usize },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(executable)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).base_executable) as usize - ptr as usize },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(base_executable)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).prefix) as usize - ptr as usize },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(prefix)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).base_prefix) as usize - ptr as usize },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(base_prefix)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).exec_prefix) as usize - ptr as usize },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(exec_prefix)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).base_exec_prefix) as usize - ptr as usize },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(base_exec_prefix)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).skip_source_first_line) as usize - ptr as usize },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(skip_source_first_line)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).run_command) as usize - ptr as usize },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(run_command)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).run_module) as usize - ptr as usize },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(run_module)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).run_filename) as usize - ptr as usize },
        400usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(run_filename)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr)._install_importlib) as usize - ptr as usize },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(_install_importlib)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr)._init_main) as usize - ptr as usize },
        412usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(_init_main)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr)._isolated_interpreter) as usize - ptr as usize },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(_isolated_interpreter)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr)._is_python_build) as usize - ptr as usize },
        420usize,
        concat!(
            "Offset of field: ",
            stringify!(PyConfig),
            "::",
            stringify!(_is_python_build)
        )
    );
}
extern "C" {
    pub fn PyConfig_InitIsolatedConfig(config: *mut PyConfig);
}
extern "C" {
    pub fn PyConfig_SetBytesString(
        config: *mut PyConfig,
        config_str: *mut *mut wchar_t,
        str_: *const ::std::os::raw::c_char,
    ) -> PyStatus;
}
extern "C" {
    pub fn Py_PreInitialize(src_config: *const PyPreConfig) -> PyStatus;
}
extern "C" {
    pub fn Py_InitializeFromConfig(config: *const PyConfig) -> PyStatus;
}
extern "C" {
    pub fn Py_RunMain() -> ::std::os::raw::c_int;
}
